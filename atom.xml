<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZombieBrand</title>
  
  <subtitle>前端</subtitle>
  <link href="/ZombieBrand.github.io/atom.xml" rel="self"/>
  
  <link href="https://zombrbrand.github.io/ZombieBrand.github.io/"/>
  <updated>2019-03-13T09:10:57.292Z</updated>
  <id>https://zombrbrand.github.io/ZombieBrand.github.io/</id>
  
  <author>
    <name>车勇志</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>完美实现一个“回到顶部”</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/%E5%AE%8C%E7%BE%8E%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E2%80%9C%E5%9B%9E%E5%88%B0%E9%A1%B6%E9%83%A8%E2%80%9D/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/完美实现一个“回到顶部”/</id>
    <published>2019-03-13T09:10:57.000Z</published>
    <updated>2019-03-13T09:10:57.292Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>实现点击button滚动返回顶部动画</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/%E5%AE%9E%E7%8E%B0%E7%82%B9%E5%87%BBbutton%E6%BB%9A%E5%8A%A8%E8%BF%94%E5%9B%9E%E9%A1%B6%E9%83%A8%E5%8A%A8%E7%94%BB/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/实现点击button滚动返回顶部动画/</id>
    <published>2019-03-13T09:10:37.000Z</published>
    <updated>2019-03-13T09:10:37.121Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>绘制虚线并且能够设置虚线宽度方法</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/%E7%BB%98%E5%88%B6%E8%99%9A%E7%BA%BF%E5%B9%B6%E4%B8%94%E8%83%BD%E5%A4%9F%E8%AE%BE%E7%BD%AE%E8%99%9A%E7%BA%BF%E5%AE%BD%E5%BA%A6%E6%96%B9%E6%B3%95/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/绘制虚线并且能够设置虚线宽度方法/</id>
    <published>2019-03-13T09:10:10.000Z</published>
    <updated>2019-03-13T09:10:10.420Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTML5CSS3</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/HTML5CSS3/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/HTML5CSS3/</id>
    <published>2019-03-13T09:09:23.000Z</published>
    <updated>2019-03-13T09:09:23.073Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>media用法总结</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/media%E7%94%A8%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/media用法总结/</id>
    <published>2019-03-13T09:08:12.000Z</published>
    <updated>2019-03-13T09:08:12.487Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS基础知识</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/CSS%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/CSS基础知识/</id>
    <published>2019-03-13T09:07:48.000Z</published>
    <updated>2019-03-13T09:17:48.078Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSS的全称是什么"><a href="#CSS的全称是什么" class="headerlink" title="CSS的全称是什么?"></a>CSS的全称是什么?</h2><ul><li>Cascading Style Sheets 叠层样式表<br>一种用来表现HTML或XML等文件样式的计算机语言。</li></ul><h2 id="CSS有几种引入方式-link-和-import-有什么区别"><a href="#CSS有几种引入方式-link-和-import-有什么区别" class="headerlink" title="CSS有几种引入方式? link 和@import 有什么区别?"></a>CSS有几种引入方式? link 和<a href="https://github.com/import" target="_blank" rel="noopener">@import</a> 有什么区别?</h2><ol><li>内联样式<br>内联方式指的是直接在HTML标签中的style属性中添加CSS。<br><code>&lt;h1 style=&quot;color:red&quot;&gt; &lt;/h1&gt;</code></li><li>内部样式<br>内部样式指的是在HTML头部中的<style>标签中写CSS代码。</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type="text/css"&gt;</span><br><span class="line">     <span class="selector-tag">h1</span>&#123;</span><br><span class="line">          <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol><li>外部样式。分为<strong>链接</strong>和<strong>导入</strong></li></ol><ul><li>链接方式<br>链接方式指的是使用HTML头部的标签引入外部的CSS文件。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>导入方式<br>导入方式指的是使用CSS规则引入外部CSS文件。</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    @<span class="keyword">import</span> url(style.css);</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="比较link和-import区别"><a href="#比较link和-import区别" class="headerlink" title="比较link和@import区别"></a>比较link和<a href="https://github.com/import">@import</a>区别</h3><p>link 属于 HTML，通过 标签中的 href 属性来引入外部文件，而 <a href="https://github.com/import">@import</a> 属于 CSS，所以导入语句应写在 CSS 中，要注意的是导入语句应写在样式表的开头，否则无法正确导入外部文件；<br>使用链接方式时，会在装置页面主体部分之前装载CSS文件，这样显示出来的网页从一开始就是带有样式的效果，而使用导入式时，会在整个页面装载完成后再装载CSS文件，对于有的浏览器来说，在一些情况下，如果网页文件的体积比较大，则会出现先显示无样式的页面，闪烁一下之后再出现样式设置后的效果。从浏览者的感受来说，这是使用导入式的一个缺陷。<br>兼容性的差别。<a href="https://github.com/import">@import</a>是CSS2.1提出，在IE5上才能识别。link无此问题。<br>link支持使用Javascript控制DOM去改变样式；而<a href="https://github.com/import">@import</a>不支持</p><h2 id="以下这几种文件路径分别用在什么地方，代表什么意思"><a href="#以下这几种文件路径分别用在什么地方，代表什么意思" class="headerlink" title="以下这几种文件路径分别用在什么地方，代表什么意思?"></a>以下这几种文件路径分别用在什么地方，代表什么意思?</h2><ul><li>css/a.css：<br>相对路径：代表当前目录下css文件夹中的a.css文件</li><li>./css/a.css<br>相对路径：代表当前目录下css文件夹中的a.css文件（加单个点与不加相同）</li><li>b.css<br>相对路径：代表当前目录下b.css文件</li><li>../imgs/a.png<br>相对路径：代表上级目录下imgs文件夹中的a.png文件</li><li>/Users/hunger/project/css/a.css<br>/static/css/a.css<br>绝对路径：代表本地绝对路径a.css文件</li><li><a href="http://cdn.xxxx.com/kejian1/8-1.png">http://cdn.xxxx.com/kejian1/8-1.png</a><br>网络路径：代表网站的图片路径</li><li>/static/css/a.css<br>网站相对路径：代表网站服务器根目录static文件夹中的css文件夹中的a.css文件</li></ul><h2 id="如果我想在网页上展示一个图片，需要怎么操作"><a href="#如果我想在网页上展示一个图片，需要怎么操作" class="headerlink" title="如果我想在网页上展示一个图片，需要怎么操作?"></a>如果我想在网页上展示一个图片，需要怎么操作?</h2><ul><li>将本地图片发到服务器上，或者直接从别的网站复制图片地址。<br>使用<code>&lt;img src=&quot;地址&quot;&gt;</code></li></ul><h2 id="列出5条以上html和-css-的书写规范"><a href="#列出5条以上html和-css-的书写规范" class="headerlink" title="列出5条以上html和 css 的书写规范"></a>列出5条以上html和 css 的书写规范</h2><ol><li>在每个 HTML 页面的第一行添加声明</li><li>添加标签</li><li>属性名 与之后的 :之间不允许包含空格，:与属性值之间必须包含空格。</li><li>使用英文小写</li><li>+、&gt;、~ 选择器的两边各保留一个空格。</li><li>RGB颜色值必须使用十六进制记号形式 #rrggbb。不允许使用 rgb()。</li><li>需要在 Windows 平台显示的中文内容，其字号应不小于 12px。</li><li>使用 4 个空格做为一个缩进层级，不允许使用 2 个空格 或 tab 字符<br>别忘记结束符</li><li>使用外联式css样式</li><li>选择器 与 { 之间必须包含空格。</li><li>使用注释，方便以后或其他人理解</li></ol></style></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CSS的全称是什么&quot;&gt;&lt;a href=&quot;#CSS的全称是什么&quot; class=&quot;headerlink&quot; title=&quot;CSS的全称是什么?&quot;&gt;&lt;/a&gt;CSS的全称是什么?&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Cascading Style Sheets 叠层样式表&lt;br&gt;一种
      
    
    </summary>
    
      <category term="css" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/categories/css/"/>
    
    
      <category term="css" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS常见样式2</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/CSS%E5%B8%B8%E8%A7%81%E6%A0%B7%E5%BC%8F2/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/CSS常见样式2/</id>
    <published>2019-03-13T09:07:35.000Z</published>
    <updated>2019-03-13T09:21:06.889Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSS常见样式"><a href="#CSS常见样式" class="headerlink" title="CSS常见样式"></a>CSS常见样式</h2><h2 id="背景样式"><a href="#背景样式" class="headerlink" title="背景样式"></a>背景样式</h2><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>background</td><td>简写属性，作用是将背景属性设置在一个声明中</td></tr><tr><td>background-attachment</td><td>背景图像是否固定或者随着页面的其余部分滚动</td></tr><tr><td>background-color</td><td>设置元素的背景颜色</td></tr><tr><td>background-image</td><td>把图像设置为背景</td></tr><tr><td>background-position</td><td>设置背景图像的起始位置</td></tr><tr><td>background-repeat</td><td>设置背景图像是否及如何重复</td></tr><tr><td>background-size</td><td>设置背景的大小(兼容性)</td></tr></tbody></table><ul><li>background-position：默认左上角<br>x y<br>x% y%<br>[top | center | bottom] [left | center | right]</li><li>background-repeat<br>no-repeat：背景图片在规定位置<br>repeat-x：图片横向重复<br>repeat-y：图片纵向重复<br>repeat：全部重复</li><li>background-size<br>100px 100px<br>contain<br>cover</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-color</span>: <span class="selector-id">#F00</span>;</span><br><span class="line"><span class="selector-tag">background-image</span>: <span class="selector-tag">url</span>(<span class="selector-tag">background</span><span class="selector-class">.gif</span>);</span><br><span class="line"><span class="selector-tag">background-repeat</span>: <span class="selector-tag">no-repeat</span>;</span><br><span class="line"><span class="selector-tag">background-attachment</span>: <span class="selector-tag">fixed</span>;</span><br><span class="line"><span class="selector-tag">background-position</span>: 0 0;</span><br></pre></td></tr></table></figure><p>可以缩写为一句：</p><p><code>background: #f00 url(background.gif) no-repeat fixed 0 0;</code></p><h3 id="提醒："><a href="#提醒：" class="headerlink" title="提醒："></a>提醒：</h3><ul><li>要显示出background-img:容器需有 窗口，要被撑开。</li></ul><h2 id="text-align-center的作用是什么，作用在什么元素上？能让什么元素水平居中"><a href="#text-align-center的作用是什么，作用在什么元素上？能让什么元素水平居中" class="headerlink" title="text-align: center的作用是什么，作用在什么元素上？能让什么元素水平居中"></a>text-align: center的作用是什么，作用在什么元素上？能让什么元素水平居中</h2><p>作用是让行内元素（包括inline-block）水平居中<br>作用在要水平居中的行内元素的父元素上</p><h2 id="IE-盒模型和W3C盒模型有什么区别"><a href="#IE-盒模型和W3C盒模型有什么区别" class="headerlink" title="IE 盒模型和W3C盒模型有什么区别?"></a>IE 盒模型和W3C盒模型有什么区别?</h2><p><a href="https://camo.githubusercontent.com/1fd3208fe0e92f26c93b966eb850d5e3bb7b3ff2/687474703a2f2f6c736c79313938392e71696e6975646e2e636f6d2f3230313530333135312e4a5047" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/1fd3208fe0e92f26c93b966eb850d5e3bb7b3ff2/687474703a2f2f6c736c79313938392e71696e6975646e2e636f6d2f3230313530333135312e4a5047" alt="IMAGE"></a><br><a href="https://camo.githubusercontent.com/5f1083851bbbe13738da826a57c3fd14d0263b58/687474703a2f2f6c736c79313938392e71696e6975646e2e636f6d2f3230313530333135322e4a5047" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/5f1083851bbbe13738da826a57c3fd14d0263b58/687474703a2f2f6c736c79313938392e71696e6975646e2e636f6d2f3230313530333135322e4a5047" alt="IMAGE"></a><br>区别<br>W3C标准盒模型中padding、border所占的空间不在width、height范围内，大家俗称的IE的盒模型width包括content尺寸＋padding＋border。</p><p>ie678怪异模式（不添加 doctype）使用 ie 盒模型，宽度=边框+padding+内容宽度。<br>chrome， ie9+, ie678(添加 doctype) 使用标准盒模型， 宽度= 内容宽度。</p><h2 id="box-sizing-border-box-的作用是什么？"><a href="#box-sizing-border-box-的作用是什么？" class="headerlink" title="{ box-sizing: border-box;}的作用是什么？"></a>{ box-sizing: border-box;}的作用是什么？</h2><h3 id="css3新样式box-sizing：允许以特定的方式定义匹配某个区域的特定元素"><a href="#css3新样式box-sizing：允许以特定的方式定义匹配某个区域的特定元素" class="headerlink" title="css3新样式box-sizing：允许以特定的方式定义匹配某个区域的特定元素"></a>css3新样式box-sizing：允许以特定的方式定义匹配某个区域的特定元素</h3><p>值：<br>box-sizing: content-box：w3c标准盒模型<br>box-sizing: border-box：“IE盒模型”</p><h2 id="line-height-2和line-height-200-有什么区别"><a href="#line-height-2和line-height-200-有什么区别" class="headerlink" title="line-height: 2和line-height: 200%有什么区别?"></a>line-height: 2和line-height: 200%有什么区别?</h2><p>计算方法的区别。</p><ul><li>数值：继承的时候，浏览器会先将line-height这个属性继承给子元素，再由子元素计算。根据自身元素font-size的2倍计算。</li><li>百分数：继承的时候，浏览器会先将行高对应的具体的数值计算出来以后再继承。根据父元素的font-size的200%计算。</li></ul><p>另外 height = line-heihgt 可以用来 <strong>垂直居中单行文本</strong></p><h2 id="inline-block有什么特性？如何去除缝隙？高度不一样的inline-block元素如何顶端对齐"><a href="#inline-block有什么特性？如何去除缝隙？高度不一样的inline-block元素如何顶端对齐" class="headerlink" title="inline-block有什么特性？如何去除缝隙？高度不一样的inline-block元素如何顶端对齐?"></a>inline-block有什么特性？如何去除缝隙？高度不一样的inline-block元素如何顶端对齐?</h2><ol><li>inline-block 内联块级元素，既能放在一行（内联元素特性），又能设置宽高及padding margin（块级元素特性）。</li><li>inline-block 元素间的空白/回车换行会产生缝隙，去除缝隙可以使html标签连续（无空白/折行），还可以设置其父元素font-size:0; 然后在inline-block元素内恢复font-size。</li><li>在父元素中使用vertical-align:top; 可以让高度不一样的inline-block 元素顶端对齐。（值还有<a href="http://www.w3school.com.cn/cssref/pr_pos_vertical-align.asp" target="_blank" rel="noopener">更多</a>）</li><li>行内元素和inline-block元素水平方向上默认情况下是按基线对齐</li></ol><h2 id="CSS-sprite-是什么"><a href="#CSS-sprite-是什么" class="headerlink" title="CSS sprite 是什么?"></a>CSS sprite 是什么?</h2><h3 id="CSS精灵图（雪碧图）"><a href="#CSS精灵图（雪碧图）" class="headerlink" title="CSS精灵图（雪碧图）"></a>CSS精灵图（雪碧图）</h3><p>CSS Sprites在国内很多人叫css精灵是一种网页图片应用处理方式。它允许你将一个页面涉及到的所有零星图片都包含到一张大图中去，这样一来，当访问该页面时，载入的图片就不会像以前那样一幅一幅地慢慢显示出来了。对于当前网络流行的速度而言，不高于200KB的单张图片的所需载入时间基本是差不多的，所以无需顾忌这个问题。加速的关键，不是降低重量，而是减少个数。传统切图讲究精细，图片规格越小越好，重量越小越好，其实规格大小无所谓，计算机统一都按byte计算。客户端每显示一张图片都会向服务器发送请求。所以，图片越多请求次数越多，造成延迟的可能性也就越大。</p><ul><li>简单来说：指将不同的图片/图标合并在一张图上。<br>使用CSS Sprite 可以减少网络请求，提高网页加载性能。</li></ul><h2 id="让一个元素”看不见”有几种方式？有什么区别"><a href="#让一个元素”看不见”有几种方式？有什么区别" class="headerlink" title="让一个元素”看不见”有几种方式？有什么区别?"></a>让一个元素”看不见”有几种方式？有什么区别?</h2><h3 id="隐藏or透明"><a href="#隐藏or透明" class="headerlink" title="隐藏or透明"></a>隐藏or透明</h3><ol><li>opacity: 0 ; 透明度为0，占据文档空间，元素绑定的事件还是会触发事件。</li><li>visibility: hidden ; 类似于 opacity:0，但绑定的事件不会触发。</li><li>background-color: rgba(0，0，0，0); 只是背景色透明</li><li>display:none; 消失，不占用位置，浏览器不会去绘制它，但存在于DOM树，绑定的事件不会触发。</li></ol><p>前三种方法仅仅是改变其透明度，让其”假消失”，看不见，但存在。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CSS常见样式&quot;&gt;&lt;a href=&quot;#CSS常见样式&quot; class=&quot;headerlink&quot; title=&quot;CSS常见样式&quot;&gt;&lt;/a&gt;CSS常见样式&lt;/h2&gt;&lt;h2 id=&quot;背景样式&quot;&gt;&lt;a href=&quot;#背景样式&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="css" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/categories/css/"/>
    
    
      <category term="css" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS常见样式1</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/CSS%E5%B8%B8%E8%A7%81%E6%A0%B7%E5%BC%8F1/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/CSS常见样式1/</id>
    <published>2019-03-13T09:07:30.000Z</published>
    <updated>2019-03-13T09:19:44.770Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSS常见样式"><a href="#CSS常见样式" class="headerlink" title="CSS常见样式"></a>CSS常见样式</h2><h2 id="块级元素和行内元素分别有哪些？动手测试并列出4条以上的特性区别"><a href="#块级元素和行内元素分别有哪些？动手测试并列出4条以上的特性区别" class="headerlink" title="块级元素和行内元素分别有哪些？动手测试并列出4条以上的特性区别"></a>块级元素和行内元素分别有哪些？动手测试并列出4条以上的特性区别</h2><p>块级元素行内元素<br>块级(block-level); 行内(内联、inline-level)</p><ul><li>块级元素 VS 行内元素<br>区别1：块级元素宽度占据整行，行内元素占据自身宽度的空间，能多个并列排序，直到一行排列不下，换下一行。<br>区别2：块级元素可以包含块级元素和行内元素；行内元素内只能包含行内元素和文本<br>区别3：块级元素可以设置宽高；行内元素则不能设置宽高（行内元素的高度是由line-height来决定，宽度由具体的内容来决定）<br>区别4：块级元素可以设置上下左右的margin、padding 边距；行内元素只对左右方向的margin、padding生效，上下无效（行内元素对于上下padding，可以看到背景色和边框的影响，但高度还是无法撑开）<br>区别5：块级元素，默认为display: block；行内元素表示为display:inline.<br>区别6：行内元素可以”感受”到浮动元素的存在。</li><li>block-level<br>div h1 h2 h3 h4 h5 h6 p hr<br>form ul dl ol pre table<br>li dd dt tr td th</li><li>inline-level<br>em strong span a br img<br>button input label select textarea<br>code script</li></ul><h2 id="什么是-CSS-继承-哪些属性能继承，哪些不能？"><a href="#什么是-CSS-继承-哪些属性能继承，哪些不能？" class="headerlink" title="什么是 CSS 继承? 哪些属性能继承，哪些不能？"></a>什么是 CSS 继承? 哪些属性能继承，哪些不能？</h2><p>  css继承：继承就是子标签继承了上级标签的CSS样式的属性。</p><ul><li>不可继承的：display、margin、border、padding、background、height、min-height、max-height、width、min-width、max-width、overflow、position、left、right、top、bottom、z-index、float、clear、table-layout、vertical-align、page-break-after、page-bread-before和unicode-bidi。</li><li>所有元素可继承：visibility和cursor。</li><li>内联元素可继承：letter-spacing、word-spacing、white-space、line-height、color、font、font-family、font-size、font-style、font-variant、font-weight、text-decoration、text-transform、direction。</li><li>终端块状元素可继承：text-indent和text-align。</li><li>列表元素可继承：list-style、list-style-type、list-style-position、list-style-image。</li><li>表格元素可继承：border-collapse。</li></ul><h2 id="如何让块级元素水平居中？如何让行内元素水平居中"><a href="#如何让块级元素水平居中？如何让行内元素水平居中" class="headerlink" title="如何让块级元素水平居中？如何让行内元素水平居中?"></a>如何让块级元素水平居中？如何让行内元素水平居中?</h2><h3 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h3><ol><li><p>内联元素：在其父元素身上加 text-align:center；</p></li><li><p>块级元素： </p><p>固定宽度的div</p><p>margin-left: auto</p><p>margin-right: auto</p><p>不固定宽度的 div（有这种无脑需求？）</p><p>margin: 0 100px;</p></li></ol><h2 id="用-CSS-实现一个三角形"><a href="#用-CSS-实现一个三角形" class="headerlink" title="用 CSS 实现一个三角形"></a>用 CSS 实现一个三角形</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  &lt;div class="box"&gt;&lt;/div&gt;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>   设置块级元素的宽高都为0px，上下左右border设置实线solid，留一个设置为有颜色，其他三个为transparent透明，调整4个border的px可实现不同形状三角形(见最后任务4)</p><h2 id="单行文本溢出加-…如何实现"><a href="#单行文本溢出加-…如何实现" class="headerlink" title="单行文本溢出加 …如何实现?"></a>单行文本溢出加 …如何实现?</h2><p>首先设置不换行：white-space:nowrap;<br>其次设置超出隐藏：overflow:hidden;<br>再设置文本溢出显示为省略号：text-overflow:ellipsis;</p><h2 id="px-em-rem-vw有什么区别"><a href="#px-em-rem-vw有什么区别" class="headerlink" title="px, em, rem vw有什么区别"></a>px, em, rem vw有什么区别</h2><ul><li>px 是绝对长度单位。em、rem 是相对长度单位</li><li>em<br>如果用于font-size属性本身，则相对于父元素的font-size。若用于其它属性，则相对于元素本身的font-size<br>当没有设置font-size时，chrome浏览器会有一个默认的 em 设置：1em = 16px<br>缺点：容易混乱</li><li>rem<br>rem 是相对于根元素html的font-size属性的计算值，比较好计算<br>当没有设置 font-size 时，浏览器会有一个默认的 rem 设置：1rem = 16px，这点与 em 是一致的<br>兼容性：IE8-不支持</li><li>vw vh: 相对单位，1vw 为屏幕宽度的1% <a href="http://caniuse.com/#search=vw" target="_blank" rel="noopener">兼容性</a></li></ul><h2 id="解释下面代码的作用-为什么要加引号-字体里-5b8b-4f53代表什么"><a href="#解释下面代码的作用-为什么要加引号-字体里-5b8b-4f53代表什么" class="headerlink" title="解释下面代码的作用?为什么要加引号? 字体里\5b8b\4f53代表什么?"></a>解释下面代码的作用?为什么要加引号? 字体里\5b8b\4f53代表什么?</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> tahoma,arial,<span class="string">'Hiragino Sans GB'</span>,<span class="string">'\5b8b\4f53'</span>,sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置body的字样为大小12px，1.5倍行高，字体选择依次为 tahoma,arial,’Hiragino Sans GB’,’\5b8b\4f53’,sans-serif<br>有空格的内容要加引号，才会被认为是一个整体。不然会被认为是两个<br>字体里\5b8b\4f53代表的是黑体的unicode码。文字先转化为相应的unicode码，再通过不同的字体库依据这个编码来转化为相应的字体(直接写成中文，浏览器有可能不能识别，所以要写成Unicode编码。)</p><hr><ul><li>去除元素默认 margin padding ：*{margin:0;padding:0}</li><li>颜色<br>单词: red, blue, pink, yellow, white, black<br>十六进制: #000000, #fff, #eee, #ccc, #666, #333, #f00, #0f0, #00f<br>rgb: rgb(255, 255, 255), rgb(0, 255, 0)<br>rgba: rgba(0,0,0,0.5)<br><a href="https://www.w3schools.com/colors/default.asp" target="_blank" rel="noopener">更多</a></li><li>隐藏or透明<br>opacity: 0 ; 透明度为0，整体<br>visibility: hidden ; 和opacity:0 类似<br>display:none; 消失，不占用位置<br>background-color: rgba(0，0，0，0.2) 只是背景色透明</li><li>inline-block<br>既呈现 inline 特性(不占据一整行，宽度由内容宽度决定)<br>又呈现 block 特性 (可设置宽高，内外边距)<br>缝隙问题</li><li>line-height<br>line-height: 2<br>line-height: 100%<br>height = line-heihgt 来垂直居中单行文本</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CSS常见样式&quot;&gt;&lt;a href=&quot;#CSS常见样式&quot; class=&quot;headerlink&quot; title=&quot;CSS常见样式&quot;&gt;&lt;/a&gt;CSS常见样式&lt;/h2&gt;&lt;h2 id=&quot;块级元素和行内元素分别有哪些？动手测试并列出4条以上的特性区别&quot;&gt;&lt;a href=&quot;#块级
      
    
    </summary>
    
      <category term="css" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/categories/css/"/>
    
    
      <category term="css" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS选择器</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/CSS%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/CSS选择器/</id>
    <published>2019-03-13T09:07:11.000Z</published>
    <updated>2019-03-13T09:07:11.222Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>浮动</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/%E6%B5%AE%E5%8A%A8/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/浮动/</id>
    <published>2019-03-13T09:06:58.000Z</published>
    <updated>2019-03-13T09:06:58.072Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BFC</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/BFC/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/BFC/</id>
    <published>2019-03-13T09:06:41.000Z</published>
    <updated>2019-03-13T09:15:06.372Z</updated>
    
    <content type="html"><![CDATA[<p>BFC 已经是一个耳听熟闻的词语了，网上有许多关于 BFC 的文章，介绍了如何触发 BFC 以及 BFC 的一些用处（如清除浮动，防止 margin 重叠等）。</p><h1 id="一、BFC是什么？"><a href="#一、BFC是什么？" class="headerlink" title="一、BFC是什么？"></a>一、BFC是什么？</h1><p>　　在解释 BFC 是什么之前，需要先介绍 Box、Formatting Context的概念。</p><h2 id="Box-CSS布局的基本单位"><a href="#Box-CSS布局的基本单位" class="headerlink" title="Box: CSS布局的基本单位"></a>Box: CSS布局的基本单位</h2><p>Box 是 CSS 布局的对象和基本单位， 直观点来说，就是一个页面是由很多个 Box 组成的。元素的类型和 display 属性，决定了这个 Box 的类型。 不同类型的 Box， 会参与不同的 Formatting Context（一个决定如何渲染文档的容器），因此Box内的元素会以不同的方式渲染。让我们看看有哪些盒子：</p><ul><li><p>block-level box:</p><p>display 属性为 block, list-item, table 的元素，会生成 block-level box。并且参与 block fomatting context；</p></li><li><p>inline-level box:</p><p>display 属性为 inline, inline-block, inline-table 的元素，会生成 inline-level box。并且参与 inline formatting context；</p></li><li><p>run-in box:</p><p>css3 中才有， 这儿先不讲了。</p></li></ul><h2 id="Formatting-context"><a href="#Formatting-context" class="headerlink" title="Formatting context"></a>Formatting context</h2><p>　　Formatting context 是 W3C CSS2.1 规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block fomatting context (简称BFC)和 Inline formatting context (简称IFC)。<br>　　CSS2.1 中只有 BFC 和 IFC, CSS3 中还增加了 GFC 和 FFC。</p><h2 id="BFC-定义"><a href="#BFC-定义" class="headerlink" title="BFC 定义"></a>BFC 定义</h2><p>　　BFC(Block formatting context)直译为”块级格式化上下文”。它是一个独立的渲染区域，只有Block-level box参与， 它规定了内部的Block-level Box如何布局，并且与这个区域外部毫不相干。</p><h2 id="BFC布局规则："><a href="#BFC布局规则：" class="headerlink" title="BFC布局规则："></a>BFC布局规则：</h2><ol><li>内部的Box会在垂直方向，一个接一个地放置。</li><li>Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠</li><li>每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。</li><li>BFC的区域不会与float box重叠。</li><li>BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li><li>计算BFC的高度时，浮动元素也参与计算</li></ol><h1 id="二、哪些元素会生成BFC"><a href="#二、哪些元素会生成BFC" class="headerlink" title="二、哪些元素会生成BFC?"></a>二、哪些元素会生成BFC?</h1><ol><li>根元素</li><li>float属性不为none</li><li>position为absolute或fixed</li><li>display为inline-block, table-cell, table-caption, flex, inline-flex</li><li>overflow不为visible</li></ol><h1 id="三、BFC的作用及原理"><a href="#三、BFC的作用及原理" class="headerlink" title="三、BFC的作用及原理"></a>三、BFC的作用及原理</h1><h2 id="1-自适应两栏布局"><a href="#1-自适应两栏布局" class="headerlink" title="1. 自适应两栏布局"></a>1. 自适应两栏布局</h2><p>代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-tag">body</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="selector-class">.aside</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#f66</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="selector-class">.main</span> &#123;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#fcc</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;div class="aside"&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class="main"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><a href="http://images.zyy1217.com/VkhWI" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/910fec6f2966e5cdbd7098c96d60dfb67bf1d3d0/687474703a2f2f696d616765732e7a7979313231372e636f6d2f566b685749" alt="Untitled Image"></a></p><p>根据BFC布局规则第3条：</p><blockquote><p>每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。</p></blockquote><p>　　因此，虽然存在浮动的元素aside，但main的左边依然会与包含块的左边相接触。</p><p>　　根据BFC布局规则第四条：</p><blockquote><p>BFC的区域不会与float box重叠。</p></blockquote><p>　　我们可以通过触发main生成BFC， 来实现自适应两栏布局。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　当触发main生成BFC后，这个新的BFC<strong>为了不与浮动的aside重叠</strong>。因此会根据包含块的宽度，和aside的宽度，自动变窄。效果如下：<br><a href="http://images.zyy1217.com/t01077886a9706cb26b.png" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/9fb7d39c70c0c75cc71b6cd2370d95f19cd496f4/687474703a2f2f696d616765732e7a7979313231372e636f6d2f743031303737383836613937303663623236622e706e67" alt="img"></a><br>：</p><h2 id="2-清除内部浮动"><a href="#2-清除内部浮动" class="headerlink" title="2. 清除内部浮动"></a>2. 清除内部浮动</h2><p>代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">  &lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-class">.par</span> &#123;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">5px</span> solid <span class="number">#fcc</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="selector-class">.child</span> &#123;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">5px</span> solid <span class="number">#f66</span>;</span><br><span class="line">        <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;div class="par"&gt;</span><br><span class="line">        &lt;div class="child"&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class="child"&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><a href="http://images.zyy1217.com/zVdio" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/cba2b0f0a6a58bda7ed00c8383fe27f910c30f52/687474703a2f2f696d616765732e7a7979313231372e636f6d2f7a5664696f" alt="Untitled Image"></a></p><p>根据BFC布局规则第六条：</p><blockquote><p>计算BFC的高度时，浮动元素也参与计算</p></blockquote><p>　　</p><h3 id="解决方案一般有两种"><a href="#解决方案一般有两种" class="headerlink" title="解决方案一般有两种"></a>解决方案一般有两种</h3><p>1). 利用 clear属性，清除浮动</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">对父元素加一个<span class="selector-tag">class</span><span class="selector-pseudo">:floatfix</span></span><br><span class="line"></span><br><span class="line">添加如下<span class="selector-tag">CSS</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.floatfix</span>&#123;</span><br><span class="line">    *zoom:1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.floatfix</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">""</span>;</span><br><span class="line">    <span class="attribute">display</span>:table;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2). 使父容器形成BFC</p><p>为达到清除内部浮动，我们可以触发par生成BFC，那么par在计算高度时，par内部的浮动元素child也会参与计算。</p><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  <span class="selector-class">.par</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　效果如下：</p><p><a href="http://images.zyy1217.com/LyU6R" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/e5d7823adb7490f19cc063c39752e6da974f0777/687474703a2f2f696d616765732e7a7979313231372e636f6d2f4c79553652" alt="Untitled Image"></a></p><h2 id="3-防止垂直-margin-重叠"><a href="#3-防止垂直-margin-重叠" class="headerlink" title="3. 防止垂直 margin 重叠"></a>3. 防止垂直 margin 重叠</h2><p>代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  &lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-tag">p</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#f55</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#fcc</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">text-align</span>:center;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;p&gt;Haha&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;Hehe&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>　页面：</p><p><a href="http://images.zyy1217.com/tMXSC" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/32e92a309c226b6713d14154ce6dd07fd527a349/687474703a2f2f696d616765732e7a7979313231372e636f6d2f744d585343" alt="Untitled Image"></a></p><p>　两个p之间的距离为100px，发送了margin重叠。<br>　　根据BFC布局规则第二条：</p><blockquote><p>Box垂直方向的距离由margin决定。属于<strong>同一个BFC的两个相邻Box的margin会发生重叠</strong></p></blockquote><p>折叠的结果：</p><ul><li>两个相邻的外边距都是正数时，折叠结果是它们两者之间较大的值。</li><li>两个相邻的外边距都是负数时，折叠结果是两者绝对值的较大值。</li><li>两个外边距一正一负时，折叠结果是两者的相加的和。</li></ul><p><strong>我们可以在p外面包裹一层容器，并触发该容器生成一个BFC。那么两个P便不属于同一个BFC，就不会发生margin重叠了</strong>。</p><p>　　代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-class">.wrap</span> &#123;</span><br><span class="line">        <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">p</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#f55</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#fcc</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">text-align</span>:center;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;p&gt;Haha&lt;/p&gt;</span><br><span class="line">    &lt;div class="wrap"&gt;</span><br><span class="line">        &lt;p&gt;Hehe&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>　效果如下:</p><p><a href="http://images.zyy1217.com/AnYQ1" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/fa7fc70342c72f30843f6de8f240c97c784bde30/687474703a2f2f696d616765732e7a7979313231372e636f6d2f416e595131" alt="Untitled Image"></a></p><h3 id="浮动和绝对定位不与任何元素产生-margin-折叠"><a href="#浮动和绝对定位不与任何元素产生-margin-折叠" class="headerlink" title="浮动和绝对定位不与任何元素产生 margin 折叠"></a>浮动和绝对定位不与任何元素产生 margin 折叠</h3><p>原因：</p><p>浮动元素和绝对定位元素不与其他盒子产生外边距折叠是因为元素会脱离当前的文档流，违反了上面所述的两个margin是邻接的条件同时，又因为浮动和绝对定位会使元素为它的内容创建新的BFC，因此该元素和子元素所处的BFC是不相同的，因此也不会产生margin的折叠。</p><h3 id="自己经验添加"><a href="#自己经验添加" class="headerlink" title="自己经验添加"></a>自己经验添加</h3><p>父子元素margin合并可以给父元素添加border或者padding解决</p><p>高级解决父子元素margin合并问题:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.no-collapse</span><span class="selector-pseudo">::before</span>&#123;<span class="attribute">content</span>:<span class="string">''</span>;<span class="attribute">display</span>:table;&#125;,<span class="selector-class">.no-collapse</span><span class="selector-pseudo">::after</span>&#123;<span class="attribute">content</span>:<span class="string">''</span>;<span class="attribute">display</span>:table;&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>　　其实以上的几个例子都体现了BFC布局规则第五条：</p><blockquote><p>BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</p></blockquote><p>　　因为BFC内部的元素和外部的元素绝对不会互相影响，因此， <strong>当BFC外部存在浮动时，它不应该影响BFC内部Box的布局，BFC会通过变窄，而不与浮动有重叠。同样的，当BFC内部有浮动时，为了不影响外部元素的布局，BFC计算高度时会包括浮动的高度。避免margin重叠也是这样的一个道理。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;BFC 已经是一个耳听熟闻的词语了，网上有许多关于 BFC 的文章，介绍了如何触发 BFC 以及 BFC 的一些用处（如清除浮动，防止 margin 重叠等）。&lt;/p&gt;
&lt;h1 id=&quot;一、BFC是什么？&quot;&gt;&lt;a href=&quot;#一、BFC是什么？&quot; class=&quot;heade
      
    
    </summary>
    
      <category term="css" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/categories/css/"/>
    
    
      <category term="css" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/tags/css/"/>
    
      <category term="布局" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>文本溢出加..如何实现</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E5%8A%A0-%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/文本溢出加-如何实现/</id>
    <published>2019-03-13T09:06:20.000Z</published>
    <updated>2019-03-13T09:06:20.691Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常见布局居中</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/%E5%B8%B8%E8%A7%81%E5%B8%83%E5%B1%80%E5%B1%85%E4%B8%AD/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/常见布局居中/</id>
    <published>2019-03-13T08:54:52.000Z</published>
    <updated>2019-03-13T09:02:36.333Z</updated>
    
    <content type="html"><![CDATA[<h2 id="两栏布局"><a href="#两栏布局" class="headerlink" title="两栏布局"></a>两栏布局</h2><h3 id="左侧固定宽度右边自适应"><a href="#左侧固定宽度右边自适应" class="headerlink" title="左侧固定宽度右边自适应"></a>左侧固定宽度右边自适应</h3><h4 id="负margin方法："><a href="#负margin方法：" class="headerlink" title="负margin方法："></a>负margin方法：</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="container"&gt;</span><br><span class="line">  &lt;div class="left"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class="right"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background</span>:red;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">float</span>:right;</span><br><span class="line">    <span class="attribute">margin-right</span>:-<span class="number">210px</span>;</span><br><span class="line">    <span class="attribute">background</span>:blue;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="overflow方法"><a href="#overflow方法" class="headerlink" title="overflow方法:"></a>overflow方法:</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="container"&gt;</span><br><span class="line">  &lt;div class="left"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class="right"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background</span>:red;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">background</span>:blue;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="position方法"><a href="#position方法" class="headerlink" title="position方法:"></a>position方法:</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="container"&gt;</span><br><span class="line">  &lt;div class="left"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class="right"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">210px</span>;</span><br><span class="line">    <span class="attribute">right</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">background</span>:blue;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="flex方法"><a href="#flex方法" class="headerlink" title="flex方法:"></a>flex方法:</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="container"&gt;</span><br><span class="line">  &lt;div class="left"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class="right"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">   <span class="attribute">display</span>:flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background</span>:red;</span><br><span class="line">    <span class="attribute">margin-right</span>:<span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line"><span class="attribute">flex</span>:<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">background</span>:blue;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="三栏布局"><a href="#三栏布局" class="headerlink" title="三栏布局"></a>三栏布局</h2><h3 id="margin方法"><a href="#margin方法" class="headerlink" title="margin方法"></a>margin方法</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="container"&gt;</span><br><span class="line">  &lt;div class="left"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class="right"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class="center"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>:red;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">float</span>:left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.center</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">background</span>:pink;</span><br><span class="line">  <span class="attribute">overflow</span>:auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>:blue;</span><br><span class="line">  <span class="attribute">float</span>:right;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="overflow方法-1"><a href="#overflow方法-1" class="headerlink" title="overflow方法"></a>overflow方法</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="container"&gt;</span><br><span class="line">  &lt;div class="left"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class="right"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class="center"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>:red;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">float</span>:left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.center</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">background</span>:pink;</span><br><span class="line">  <span class="attribute">overflow</span>:auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>:blue;</span><br><span class="line">  <span class="attribute">float</span>:right;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="position方法-1"><a href="#position方法-1" class="headerlink" title="position方法"></a>position方法</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="container"&gt;</span><br><span class="line">  &lt;div class="left"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class="center"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class="right"&gt;&lt;/div&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">*&#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>:border-box;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>:red;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">position</span>:absolute;</span><br><span class="line">  <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.center</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="built_in">calc</span>(100% - 440px);</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">background</span>:pink;</span><br><span class="line">  <span class="attribute">position</span>:absolute;</span><br><span class="line">  <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>:<span class="built_in">translateX</span>(-50%);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>:blue;</span><br><span class="line">  <span class="attribute">position</span>:absolute;</span><br><span class="line">  <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="flex方法-1"><a href="#flex方法-1" class="headerlink" title="flex方法"></a>flex方法</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="container"&gt;</span><br><span class="line">  &lt;div class="left"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class="center"&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class="right"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">*&#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>:border-box;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line"> <span class="attribute">display</span>:flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>:red;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.center</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">background</span>:pink; </span><br><span class="line">  <span class="attribute">flex</span>:<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background</span>:blue;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="块级元素居中"><a href="#块级元素居中" class="headerlink" title="块级元素居中"></a>块级元素居中</h2><h3 id="margin方法-1"><a href="#margin方法-1" class="headerlink" title="margin方法"></a>margin方法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:grey;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background</span>:red;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="position方法-2"><a href="#position方法-2" class="headerlink" title="position方法"></a>position方法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:grey;</span><br><span class="line">  <span class="attribute">position</span>:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background</span>:red;</span><br><span class="line">  <span class="attribute">position</span>:absolute;</span><br><span class="line">  <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>:<span class="built_in">translateX</span>(-50%)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="display-flex"><a href="#display-flex" class="headerlink" title="display:flex"></a>display:flex</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:grey;</span><br><span class="line">  <span class="attribute">display</span>:flex;   </span><br><span class="line">  <span class="attribute">justify-content</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>text-align:center</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:grey;</span><br><span class="line">  <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background</span>:red;</span><br><span class="line">  <span class="attribute">display</span>:inline-block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多行文字水平垂直居中"><a href="#多行文字水平垂直居中" class="headerlink" title="多行文字水平垂直居中"></a>多行文字水平垂直居中</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">section</span>&gt;</span><br><span class="line">  &lt;div class="container"&gt;</span><br><span class="line">     &lt;h1 class="title"&gt;这是标题&lt;/h1&gt;</span><br><span class="line">     &lt;p class="content"&gt;这是一大段文字内容这是一大段文字内容这是一大段文字内容这是一大段文字内容这是一大段文字内容这是一大段文字内容&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/section&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-tag">section</span>&#123;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">0</span> <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">background</span>:grey;</span><br><span class="line">  <span class="attribute">text-align</span>:center;</span><br><span class="line">  <span class="attribute">display</span>:table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>:middle;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="image水平垂直居中"><a href="#image水平垂直居中" class="headerlink" title="image水平垂直居中"></a>image水平垂直居中</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div class="container"&gt;</span><br><span class="line">   &lt;img src="" alt="图片"&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">border</span>:<span class="number">1px</span> solid red;</span><br><span class="line">  <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>:<span class="string">''</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>:inline-block;</span><br><span class="line">  <span class="attribute">vertical-align</span>:middle;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>:middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="浏览器固定水平垂直居中"><a href="#浏览器固定水平垂直居中" class="headerlink" title="浏览器固定水平垂直居中"></a>浏览器固定水平垂直居中</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>:fixed;</span><br><span class="line">  <span class="attribute">top</span>:<span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>:<span class="built_in">translate</span>(-50%,-50%);</span><br><span class="line">  <span class="attribute">background</span>:<span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h2><h3 id="SVG和font-img"><a href="#SVG和font-img" class="headerlink" title="SVG和font/img"></a>SVG和font/img</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">svg</span>&#123;<span class="attribute">vertical-align</span>:middle&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">span</span>&#123;<span class="attribute">vertical-align</span>:middle&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">vertical-align</span>:middle</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>经典文章:<a href="https://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/" target="_blank" rel="noopener">https://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;两栏布局&quot;&gt;&lt;a href=&quot;#两栏布局&quot; class=&quot;headerlink&quot; title=&quot;两栏布局&quot;&gt;&lt;/a&gt;两栏布局&lt;/h2&gt;&lt;h3 id=&quot;左侧固定宽度右边自适应&quot;&gt;&lt;a href=&quot;#左侧固定宽度右边自适应&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="css" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/categories/css/"/>
    
    
      <category term="css" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/tags/css/"/>
    
      <category term="布局" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>flex布局</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/flex%E5%B8%83%E5%B1%80/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/flex布局/</id>
    <published>2019-03-13T08:49:23.966Z</published>
    <updated>2019-03-13T08:56:28.530Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常见布局"><a href="#常见布局" class="headerlink" title="常见布局"></a>常见布局</h2><ul><li>normal flow（正常流）</li><li>float + clear（浮动+清楚浮动）</li><li>position relative + absolute （相对定位+绝对定位）</li><li>display inline-block （改变元素属性）</li><li>-margin（负外边距）</li></ul><h2 id="Flex布局特性"><a href="#Flex布局特性" class="headerlink" title="Flex布局特性"></a>Flex布局特性</h2><ol><li><p>块级布局侧重垂直方向、行内布局侧重水平方向，flex布局是<strong>与方向无关的</strong></p></li><li><p>flex布局可以实现<strong>空间自动分配</strong>、<strong>自动对齐</strong>（全称:the flexible box Module）</p></li><li><p>flex适用于<strong>简单的线性布局</strong>，更复杂的布局要交给grid布局（目前还没发布）</p></li></ol><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><blockquote><p>display: flex;</p><p>display: inline-flex;</p><p>设为Flex布局后，子元素的<code>loat,clear</code>和<code>vertical-align</code>属性将失效。</p></blockquote><h2 id="Flex基础概念"><a href="#Flex基础概念" class="headerlink" title="Flex基础概念"></a>Flex基础概念</h2><p><strong>采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。</strong></p><p><a href="https://camo.githubusercontent.com/c204f0894898f5a8feee7ec098a16fc94532a5fa/68747470733a2f2f6f6f6f2e306f302e6f6f6f2f323031372f30352f30392f353931313763336464623763662e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/c204f0894898f5a8feee7ec098a16fc94532a5fa/68747470733a2f2f6f6f6f2e306f302e6f6f6f2f323031372f30352f30392f353931313763336464623763662e706e67" alt="flex基础分解图"></a></p><ul><li><p>上图水平是主轴(main axis)垂直是侧轴(cross axis)。主轴的开始位置叫做<code>main start</code>，结束位置叫做<code>main end</code>；侧轴的开始位置叫做<code>cross start</code>，结束位置叫做<code>cross end</code> 。</p></li><li><p>项目默认沿主轴排列。单个项目占据的主轴空间叫做<code>main size</code>，占据的侧轴空间叫做<code>cross size</code>。</p></li></ul><h2 id="Flex-container容器属性"><a href="#Flex-container容器属性" class="headerlink" title="Flex container容器属性"></a>Flex container容器属性</h2><h3 id="flex-direction-决定了主轴的方向（即项目的排列方向"><a href="#flex-direction-决定了主轴的方向（即项目的排列方向" class="headerlink" title="flex-direction: 决定了主轴的方向（即项目的排列方向)"></a>flex-direction: 决定了主轴的方向（即项目的排列方向)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">     <span class="attribute">display</span>:flex;</span><br><span class="line">     <span class="attribute">flex-direction</span>:column-revers|column|row-reverse|row;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性名</th><th>说明</th></tr></thead><tbody><tr><td>row(默认)</td><td>主轴方向为水平，起点在左端</td></tr><tr><td>row- reverse</td><td>主轴方向为水平，起点在右端</td></tr><tr><td>column</td><td>主轴方向为垂直，起点在上端</td></tr><tr><td>column-reverse</td><td>主轴方向为垂直，起点在下端</td></tr></tbody></table><p>  <a href="https://camo.githubusercontent.com/bb8b00a8353d931a32a422edc2f8b525cc510f1a/687474703a2f2f7777772e7275616e796966656e672e636f6d2f626c6f67696d672f61737365742f323031352f6267323031353037313030352e706e67" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/bb8b00a8353d931a32a422edc2f8b525cc510f1a/687474703a2f2f7777772e7275616e796966656e672e636f6d2f626c6f67696d672f61737365742f323031352f6267323031353037313030352e706e67" alt="flex-direction排序图"></a></p><blockquote><p>单独添加flex-direction: row; //默认是不会换行</p></blockquote><hr><h3 id="flex-wrap-定义如果一条轴线排不下，如何换行"><a href="#flex-wrap-定义如果一条轴线排不下，如何换行" class="headerlink" title="flex-wrap: 定义如果一条轴线排不下，如何换行"></a>flex-wrap: 定义如果一条轴线排不下，如何换行</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">     <span class="attribute">display</span>:flex;</span><br><span class="line">     <span class="attribute">flex-direction</span>:now  </span><br><span class="line">     flex-wrap:wrap;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性名</th><th>说明</th></tr></thead><tbody><tr><td>nowrap(默认)</td><td>不换行</td></tr><tr><td>wrap</td><td>换行</td></tr><tr><td>wrap-reverse</td><td>换行反转</td></tr></tbody></table><p>  <a href="https://camo.githubusercontent.com/ef9b8559067337e190b156db8ff369f199e7e477/687474703a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f353535363032362d353461626161306361653634323863652e6a70673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/ef9b8559067337e190b156db8ff369f199e7e477/687474703a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f353535363032362d353461626161306361653634323863652e6a70673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" alt="img"></a></p><hr><h3 id="flex-flow（以上两个属性的简写）"><a href="#flex-flow（以上两个属性的简写）" class="headerlink" title="flex-flow（以上两个属性的简写）"></a>flex-flow（以上两个属性的简写）</h3><p>  <code>flex-flow</code>属性是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">flex-flow</span>: row nowrap;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><h3 id="justify-content-定义了项目在主轴上的对齐方式"><a href="#justify-content-定义了项目在主轴上的对齐方式" class="headerlink" title="justify-content:定义了项目在主轴上的对齐方式"></a>justify-content:定义了项目在主轴上的对齐方式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">justify-content</span>:flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性名</th><th>说明</th></tr></thead><tbody><tr><td>flex-start(默认)</td><td>项目沿着主轴方向的起始位置靠齐</td></tr><tr><td>flex-end</td><td>项目沿着主轴方向的结束位置靠齐，和flex-start相反</td></tr><tr><td>space-between</td><td>项目在主轴方向上两端对齐，其中的间隔相等</td></tr><tr><td>space-around</td><td>每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍</td></tr></tbody></table><p>  <a href="https://camo.githubusercontent.com/8f5eaddc35a3f320262ee598998c8d038946d04c/687474703a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f353535363032362d636664303366343763313632663434382e6a70673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/8f5eaddc35a3f320262ee598998c8d038946d04c/687474703a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f353535363032362d636664303366343763313632663434382e6a70673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" alt="img"></a></p><hr><h3 id="align-items定义项目在交叉轴上如何对齐"><a href="#align-items定义项目在交叉轴上如何对齐" class="headerlink" title="align-items定义项目在交叉轴上如何对齐"></a>align-items定义项目在交叉轴上如何对齐</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">align-items</span>:flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性名</th><th>说明</th></tr></thead><tbody><tr><td>flex-start</td><td>项目沿着侧轴上的起点对齐</td></tr><tr><td>flex-end</td><td>项目沿着侧轴上的终点对齐</td></tr><tr><td>center</td><td>项目在侧轴方向上居中对齐</td></tr><tr><td>stretch(默认)</td><td>如果项目未设置高度或高度为auto,将占满整个容器的高度。</td></tr></tbody></table><p><a href="https://camo.githubusercontent.com/e4492baad276d7c4ad526348c72addbbe0b7ff86/687474703a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f353535363032362d363362306666326638653362616136622e6a70673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/e4492baad276d7c4ad526348c72addbbe0b7ff86/687474703a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f353535363032362d363362306666326638653362616136622e6a70673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" alt="img"></a></p><hr><h3 id="align-content多行多列内容对齐方式"><a href="#align-content多行多列内容对齐方式" class="headerlink" title="align-content多行多列内容对齐方式"></a>align-content多行多列内容对齐方式</h3><p><em>注意如果项目只有一行，属性不起作用</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">align-content</span>:flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性名</th><th>说明</th></tr></thead><tbody><tr><td>flex-start</td><td>项目与侧轴的起点对齐</td></tr><tr><td>flex-end</td><td>项目与侧轴的终点对齐</td></tr><tr><td>center</td><td>项目与侧轴的中点对齐</td></tr><tr><td>space-between</td><td>与侧轴两端对齐，轴线之间的间隔平均分布</td></tr><tr><td>space-around</td><td>每行轴线两侧的间隔都相等。所以轴线之间的间隔比轴线与边框的间隔大一倍</td></tr><tr><td>stretch（默认）</td><td>轴线占满整个测轴</td></tr></tbody></table><p><a href="https://camo.githubusercontent.com/d5d550de5ba40286e0d1d2a63dd709fdf4605e13/687474703a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f353535363032362d356562633339343136396339356566302e6a70673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/d5d550de5ba40286e0d1d2a63dd709fdf4605e13/687474703a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f353535363032362d356562633339343136396339356566302e6a70673f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970253743696d61676556696577322f322f772f31323430" alt="img"></a></p><hr><h2 id="flex-item项目属性"><a href="#flex-item项目属性" class="headerlink" title="flex item项目属性"></a>flex item项目属性</h2><ul><li><h3 id="order属性：定义项目的排列顺序。数值越小，排列越靠前，默认为0"><a href="#order属性：定义项目的排列顺序。数值越小，排列越靠前，默认为0" class="headerlink" title="order属性：定义项目的排列顺序。数值越小，排列越靠前，默认为0"></a>order属性：定义项目的排列顺序。数值越小，排列越靠前，默认为0</h3></li></ul><p><code>.item{order: &lt;integer&gt;;}</code></p><ul><li><h3 id="flex-grow属性-定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大"><a href="#flex-grow属性-定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大" class="headerlink" title="flex-grow属性:定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大"></a>flex-grow属性:定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大</h3></li></ul><p><code>.item{flex-grow:&lt;number&gt;;}</code></p><p>flex-grow为零的话则不变化，不能为負值。如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项的2倍。</p><ul><li><h3 id="flex-shrink属性：定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小"><a href="#flex-shrink属性：定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小" class="headerlink" title="flex-shrink属性：定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小"></a>flex-shrink属性：定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小</h3></li></ul><p><code>.item{flex-shrink:&lt;number&gt;;}</code></p><p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。负值对该属性无效。</p><ul><li><h3 id="flex-basis属性-定义了在分配多余空间之前，项目占据的主轴空间（main-size）"><a href="#flex-basis属性-定义了在分配多余空间之前，项目占据的主轴空间（main-size）" class="headerlink" title="flex-basis属性:定义了在分配多余空间之前，项目占据的主轴空间（main size）"></a>flex-basis属性:定义了在分配多余空间之前，项目占据的主轴空间（main size）</h3></li></ul><p>浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。它可以设为跟width或height属性一样的值，则项目将占据固定空间</p><p><code>.item{flex-basis: &lt;length&gt;| auto;</code></p><ul><li><h3 id="flex属性：flex-grow-flex-shrink和flex-basis的简写"><a href="#flex属性：flex-grow-flex-shrink和flex-basis的简写" class="headerlink" title="flex属性：flex-grow,flex-shrink和flex-basis的简写"></a>flex属性：flex-grow,flex-shrink和flex-basis的简写</h3></li></ul><p>默认值为0 1 auto。后两个属性可选。该属性有两个<code>快捷值：auto(</code>1 1 <em>auto) 和 none</em> (0 0 auto)。</p><ul><li><h3 id="align-self属性：允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性"><a href="#align-self属性：允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性" class="headerlink" title="align-self属性：允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性"></a>align-self属性：允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性</h3></li></ul><p>默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p><p><code>.item{align-self:auto | flex-start | flex-end | center | baseline | stretch;}</code></p><p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p><blockquote><p><a href="https://www.w3cplus.com/css3/understanding-flexbox-everything-you-need-to-know.html" target="_blank" rel="noopener">最近发现一篇很详细关于flex box 布局的博客链接</a><br><a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="noopener">阮一峰flex实战布局教程</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常见布局&quot;&gt;&lt;a href=&quot;#常见布局&quot; class=&quot;headerlink&quot; title=&quot;常见布局&quot;&gt;&lt;/a&gt;常见布局&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;normal flow（正常流）&lt;/li&gt;
&lt;li&gt;float + clear（浮动+清楚浮动）&lt;/li&gt;
&lt;l
      
    
    </summary>
    
      <category term="css" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/categories/css/"/>
    
    
      <category term="css" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/tags/css/"/>
    
      <category term="布局" scheme="https://zombrbrand.github.io/ZombieBrand.github.io/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/hello-world/"/>
    <id>https://zombrbrand.github.io/ZombieBrand.github.io/2019/03/13/hello-world/</id>
    <published>2019-03-13T07:07:19.895Z</published>
    <updated>2019-03-13T07:07:19.895Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
